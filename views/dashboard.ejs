<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    
    <!-- Tailwind CSS and custom styles -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    
    <!-- Favicon Links -->
    <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
    <link rel="manifest" href="/favicons/site.webmanifest">

    <!-- Custom style for dot background -->
    <style>
        #backgroundCanvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background-color: #0e0e10;
        }
        .content-container {
            z-index: 10;
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800 min-h-screen flex flex-col">
    <!-- Animated background canvas -->
    <canvas id="backgroundCanvas"></canvas>

    <!-- Header/Navbar -->
    <header class="content-container bg-transparent fixed top-0 left-0 right-0 flex justify-between items-center p-6 shadow-lg">
        <h1 class="text-2xl font-semibold text-white">Status Dashboard</h1>
        <div class="flex items-center space-x-4">
            <p class="text-white hidden md:block">Welcome, <%= user.username %>!</p>
            <a href="/" class="bg-gray-700 hover:bg-gray-600 text-white font-medium rounded-full px-4 py-2 shadow-md">
                Logout
            </a>
        </div>
    </header>

    <!-- Main Content -->
    <main class="content-container flex-grow mt-24 max-w-4xl mx-auto p-4 sm:p-8 space-y-10">
        <!-- Permissions Overview -->
        <section class="mb-8">
            <h2 class="text-xl font-bold mb-4 text-white">Permissions Overview</h2>
            <div class="bg-white rounded-lg shadow-md p-6">
                <ul class="space-y-3">
                    <% if (user.permissions & PERMISSIONS.BAN_MEMBERS) { %>
                        <li class="text-green-600 font-medium">Permission to ban members.</li>
                    <% } else { %>
                        <li class="text-red-600 font-medium">No permission to ban members.</li>
                    <% } %>

                    <% if (user.permissions & PERMISSIONS.MANAGE_ROLES) { %>
                        <li class="text-green-600 font-medium">Permission to manage roles.</li>
                    <% } else { %>
                        <li class="text-red-600 font-medium">No permission to manage roles.</li>
                    <% } %>

                    <% if (user.permissions & PERMISSIONS.VIEW_AUDIT_LOG) { %>
                        <li class="text-green-600 font-medium">Permission to view audit log.</li>
                    <% } else { %>
                        <li class="text-red-600 font-medium">No permission to view audit log.</li>
                    <% } %>
                </ul>
            </div>
        </section>

        <!-- Moderation Logs Section -->
        <section class="mb-8">
            <h2 class="text-xl font-bold mb-4 text-white">Moderation Logs</h2>
            <div class="bg-white rounded-lg shadow-md overflow-x-auto p-4">
                <table class="w-full text-left">
                    <thead>
                        <tr class="text-gray-600">
                            <th class="p-2 border-b font-medium">User ID</th>
                            <th class="p-2 border-b font-medium">Action</th>
                            <th class="p-2 border-b font-medium">Reason</th>
                            <th class="p-2 border-b font-medium">Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% logs.forEach(log => { %>
                            <tr class="hover:bg-gray-50">
                                <td class="p-2 border-b"><%= log.userid %></td>
                                <td class="p-2 border-b"><%= log.action %></td>
                                <td class="p-2 border-b"><%= log.reason %></td>
                                <td class="p-2 border-b"><%= new Date(log.created).toLocaleString() %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </section>

        <!-- Action Buttons Based on Permissions -->
        <section class="flex flex-wrap space-x-4 mt-6">
            <% if (user.permissions & PERMISSIONS.BAN_MEMBERS) { %>
                <button class="ios-button bg-red-500 hover:bg-red-600 text-white rounded-full px-4 py-2 shadow-md mb-4">
                    Ban Member
                </button>
            <% } %>
            <% if (user.permissions & PERMISSIONS.MANAGE_ROLES) { %>
                <button class="ios-button bg-blue-500 hover:bg-blue-600 text-white rounded-full px-4 py-2 shadow-md mb-4">
                    Manage Roles
                </button>
            <% } %>
            <% if (user.permissions & PERMISSIONS.VIEW_AUDIT_LOG) { %>
                <button class="ios-button bg-gray-500 hover:bg-gray-600 text-white rounded-full px-4 py-2 shadow-md mb-4">
                    View Audit Log
                </button>
            <% } %>
        </section>
    </main>

    <!-- Script for animated dots background -->
    <script>
        const canvas = document.getElementById('backgroundCanvas');
        const ctx = canvas.getContext('2d');

        let dots = [];
        const dotCount = 50;
        const dotRadius = 2.5;
        const dotSpeed = 0.2;

        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }

        function initializeDots() {
            dots = [];
            for (let i = 0; i < dotCount; i++) {
                dots.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height,
                    vx: (Math.random() - 0.5) * dotSpeed,
                    vy: (Math.random() - 0.5) * dotSpeed,
                });
            }
        }

        function drawDots() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
            dots.forEach(dot => {
                ctx.beginPath();
                ctx.arc(dot.x, dot.y, dotRadius, 0, Math.PI * 2);
                ctx.fill();
            });
        }

        function updateDots() {
            dots.forEach(dot => {
                dot.x += dot.vx;
                dot.y += dot.vy;
                if (dot.x < 0 || dot.x > canvas.width) dot.vx *= -1;
                if (dot.y < 0 || dot.y > canvas.height) dot.vy *= -1;
            });
        }

        function animate() {
            drawDots();
            updateDots();
            requestAnimationFrame(animate);
        }

        window.addEventListener('load', () => {
            resizeCanvas();
            initializeDots();
            animate();
        });

        window.addEventListener('resize', () => {
            resizeCanvas();
            initializeDots();
        });
    </script>
</body>

</html>