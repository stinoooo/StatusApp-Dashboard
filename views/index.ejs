<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Status Dashboard</title>

    <!-- Tailwind CDN and custom styles -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link rel="stylesheet" href="/css/styles.css">

    <!-- Favicon Links -->
    <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
    <link rel="manifest" href="/favicons/site.webmanifest">

    <!-- Custom style for the dot background -->
    <style>
        body, html {
            overflow: hidden; /* Prevents scroll from appearing */
        }

        /* Canvas to hold animated dots */
        #backgroundCanvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1; /* Ensures it stays behind all content */
            background-color: #0e0e10;
        }

        .content-container {
            z-index: 10; /* Ensures content is in front of the canvas */
        }
    </style>
</head>

<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <!-- Animated background canvas -->
    <canvas id="backgroundCanvas"></canvas>

    <!-- Main content -->
    <div class="content-container text-center max-w-md mx-auto p-6 bg-white rounded-lg shadow-md">
        <h1 class="text-3xl md:text-4xl font-bold text-gray-800 mb-4">Welcome to the Status Dashboard</h1>
        <p class="text-gray-600 mb-6">Log in to manage server settings and moderation.</p>
        
        <!-- Login button with Discord OAuth URL -->
        <a href="/auth/discord"
           class="ios-button bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-medium rounded-full px-6 py-3 shadow-lg">
           Login with Discord
        </a>
    </div>

    <!-- Script for animated dots background -->
    <script>
        const canvas = document.getElementById('backgroundCanvas');
        const ctx = canvas.getContext('2d');

        let dots = [];
        const dotCount = 50; // Number of dots
        const dotRadius = 2.5;
        const dotSpeed = 0.2;

        // Resize canvas to fill the screen
        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }

        // Initialize dots with random positions and velocities
        function initializeDots() {
            dots = [];
            for (let i = 0; i < dotCount; i++) {
                dots.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height,
                    vx: (Math.random() - 0.5) * dotSpeed,
                    vy: (Math.random() - 0.5) * dotSpeed,
                });
            }
        }

        // Draw each dot
        function drawDots() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
            dots.forEach(dot => {
                ctx.beginPath();
                ctx.arc(dot.x, dot.y, dotRadius, 0, Math.PI * 2);
                ctx.fill();
            });
        }

        // Update dot positions, with boundaries to keep dots within the viewport
        function updateDots() {
            dots.forEach(dot => {
                dot.x += dot.vx;
                dot.y += dot.vy;

                // Bounce off edges
                if (dot.x < 0 || dot.x > canvas.width) dot.vx *= -1;
                if (dot.y < 0 || dot.y > canvas.height) dot.vy *= -1;
            });
        }

        // Animation loop
        function animate() {
            drawDots();
            updateDots();
            requestAnimationFrame(animate);
        }

        // Set up canvas and start animation on page load
        window.addEventListener('load', () => {
            resizeCanvas();
            initializeDots();
            animate();
        });

        // Resize canvas and reinitialize dots on window resize
        window.addEventListener('resize', () => {
            resizeCanvas();
            initializeDots();
        });
    </script>
</body>
</html>