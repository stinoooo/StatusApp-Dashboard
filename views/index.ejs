<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Status Dashboard</title>

    <!-- Tailwind CSS and custom styles -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    
    <!-- Favicon Links -->
    <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
    <link rel="manifest" href="/favicons/site.webmanifest">

    <!-- Custom style for dot background -->
    <style>
        #backgroundCanvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background-color: #0e0e10;
        }
        .content-container {
            z-index: 10;
        }
    </style>
</head>

<body class="bg-gray-100 flex flex-col items-center min-h-screen">
    <!-- Animated background canvas -->
    <canvas id="backgroundCanvas"></canvas>

<!-- Header/Navbar -->
<header class="content-container w-full flex items-center justify-between p-6 shadow-md bg-gray-1000 fixed top-0">
    <!-- Logo on the left -->
    <div class="flex items-center">
        <a href="/" class="flex items-center">
            <img src="/public/images/statuslogo.png" alt="Status Logo" class="h-20 mr-4">
        </a>
    </div>

    <!-- Centered Title -->
    <div class="flex-grow text-center">
        <a href="/" class="text-3xl font-semibold text-white">Status Dashboard</a>
    </div>

    <!-- Login Button on the right -->
    <div class="flex-none">
        <a href="/auth/discord" class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-medium rounded-full px-6 py-3 shadow-lg">
            Login with Discord
        </a>
    </div>
</header>

<!-- Welcome Section -->
<section class="content-container flex items-center justify-center text-center py-60 px-6">
    <div class="max-w-lg mx-auto">
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-6">Welcome to the Status Dashboard</h1>
        <p class="text-gray-200 mb-6 text-lg">Your ultimate tool for server moderation and community management.</p>
        <a href="/auth/discord" class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-medium rounded-full px-8 py-4 shadow-lg">
            Login with Discord
        </a>
    </div>
</section>

<!-- Dashboard Features Section -->
<section class="content-container flex items-center justify-center text-center py-16 px-6">
    <div class="max-w-4xl mx-auto text-center">
        <h2 class="text-3xl font-semibold text-white">Dashboard Features</h2>
        <p class="text-gray-200 mb-8">
            Tools designed to make server management easier and more efficient for our moderators.
        </p>
        <div class="grid md:grid-cols-2 gap-6">
            <div class="p-6 bg-gray-100 rounded-lg shadow-lg text-center">
                <h3 class="text-xl font-semibold text-gray-800 mb-2">Real-Time Monitoring</h3>
                <p class="text-gray-600">Track server activities and stay updated with real-time logs and actions.</p>
            </div>
            <div class="p-6 bg-gray-100 rounded-lg shadow-lg text-center">
                <h3 class="text-xl font-semibold text-gray-800 mb-2">Comprehensive Tools</h3>
                <p class="text-gray-600">Access moderation, permissions management, and more in one place.</p>
            </div>
            <div class="p-6 bg-gray-100 rounded-lg shadow-lg text-center">
                <h3 class="text-xl font-semibold text-gray-800 mb-2">Seamless Integration</h3>
                <p class="text-gray-600">Integrated directly with Discord for a seamless moderation experience.</p>
            </div>
            <div class="p-6 bg-gray-100 rounded-lg shadow-lg text-center">
                <h3 class="text-xl font-semibold text-gray-800 mb-2">Join Our Community</h3>
                <p class="text-gray-600">Get support and engage in discussions with other users.</p>
                <a href="https://discord.gg/statusgame" 
                   class="inline-block mt-4 bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-medium rounded-full px-6 py-2 shadow-lg">
                   Join Our Discord
                </a>
            </div>
        </div>
    </div>
</section>


    <!-- Footer -->
    <footer class="content-container w-full bg-gray-1000 text-gray-400 py-6 mt-12 text-center">
        <p class="text-sm">&copy; 2024 Status Dashboard. All rights reserved.</p>
        <p class="text-xs">Designed to enhance server management and community experience.</p>
        <a href="https://discord.gg/statusgame" class="text-blue-500 hover:text-blue-400 mt-2 inline-block">Join our Discord</a>
    </footer>

    <!-- Script for animated dots background -->
    <script>
        const canvas = document.getElementById('backgroundCanvas');
        const ctx = canvas.getContext('2d');

        let dots = [];
        const dotCount = 50;
        const dotRadius = 2.5;
        const dotSpeed = 0.2;

        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }

        function initializeDots() {
            dots = [];
            for (let i = 0; i < dotCount; i++) {
                dots.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height,
                    vx: (Math.random() - 0.5) * dotSpeed,
                    vy: (Math.random() - 0.5) * dotSpeed,
                });
            }
        }

        function drawDots() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
            dots.forEach(dot => {
                ctx.beginPath();
                ctx.arc(dot.x, dot.y, dotRadius, 0, Math.PI * 2);
                ctx.fill();
            });
        }

        function updateDots() {
            dots.forEach(dot => {
                dot.x += dot.vx;
                dot.y += dot.vy;
                if (dot.x < 0 || dot.x > canvas.width) dot.vx *= -1;
                if (dot.y < 0 || dot.y > canvas.height) dot.vy *= -1;
            });
        }

        function animate() {
            drawDots();
            updateDots();
            requestAnimationFrame(animate);
        }

        window.addEventListener('load', () => {
            resizeCanvas();
            initializeDots();
            animate();
        });

        window.addEventListener('resize', () => {
            resizeCanvas();
            initializeDots();
        });
    </script>
</body>

</html>